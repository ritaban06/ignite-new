name: Build & Release Debug APK using Capacitor

on:
  workflow_dispatch:

jobs:
  build-debug:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: ⚡ Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('client/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: 🟢 Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: 📥 Install dependencies
      run: pnpm install --frozen-lockfile
      working-directory: client

    - name: 🔧 Setup Android environment variables
      run: |
        echo "Setting up Android environment variables..."
        echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > .env
        echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}" >> .env
        echo "VITE_GOOGLE_ANDROID_CLIENT_ID_DEBUG=${{ secrets.VITE_GOOGLE_ANDROID_CLIENT_ID_DEBUG }}" >> .env
        echo "VITE_SECURE_GLOBAL_DISABLE=${{ secrets.VITE_SECURE_GLOBAL_DISABLE }}" >> .env
        echo "✅ Created .env file with production environment variables"
      working-directory: client
      
    - name: 🔍 Validate Environment Variables
      run: |
        echo "Checking required environment variables..."
        [ -z "${{ secrets.VITE_API_URL }}" ] && echo "❌ VITE_API_URL is not set" && exit 1
        [ -z "${{ secrets.VITE_GOOGLE_CLIENT_ID }}" ] && echo "❌ VITE_GOOGLE_CLIENT_ID is not set" && exit 1
        [ -z "${{ secrets.VITE_GOOGLE_ANDROID_CLIENT_ID_DEBUG }}" ] && echo "❌ VITE_GOOGLE_ANDROID_CLIENT_ID_DEBUG is not set" && exit 1
        [ -z "${{ secrets.KEYSTORE_PASS }}" ] && echo "❌ KEYSTORE_PASS is not set" && exit 1
        [ -z "${{ secrets.KEY_ALIAS }}" ] && echo "❌ KEY_ALIAS is not set" && exit 1
        [ -z "${{ secrets.KEY_PASS }}" ] && echo "❌ KEY_PASS is not set" && exit 1
        echo "✅ All required environment variables are set"

    - name: 🛠 Build React app
      run: pnpm run build
      working-directory: client

    - name: ☕ Set up Java 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: 🔎 Verify Java setup
      run: |
        echo "👉 Checking Java installation..."
        java -version
        javac -version
        echo "👉 JAVA_HOME: $JAVA_HOME"
        echo "👉 ORG_GRADLE_JAVA_HOME: $ORG_GRADLE_JAVA_HOME"

    - name: 🔄 Sync Capacitor Android
      run: pnpm exec cap sync android
      working-directory: client

    - name: ⚡ Cache Android Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          client/android/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('client/android/**/*.gradle*', 'client/android/**/*.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: 🔧 Make gradlew executable
      run: chmod +x gradlew
      working-directory: client/android

    - name: 📱 Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Decode Keystore
      run: | 
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > client/android/app/my-release-key.jks

    - name: 🏗 Build Debug APK
      run: |
        echo "📂 Copying web assets into Android project..."
        rm -rf app/src/main/assets/public || true
        mkdir -p app/src/main/assets
        cp -r ../dist app/src/main/assets/public

        echo "📦 Running Gradle build for Debug APK..."
        ./gradlew assembleDebug
      working-directory: client/android
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        KEY_PASS: ${{ secrets.KEY_PASS }}
        KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
        RELEASE: false

    - name: 🏷 Rename Debug APK
      run: |
        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/v1.0.${{ github.run_number }}-debug.apk
        fi
      working-directory: client/android

    - name: 📂 List generated APK files
      run: |
        echo "Generated APK files:"
        find client/android/app/build/outputs/apk -name "*.apk" -type f

    - name: 🚀 Upload Debug APK to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: v1.0.${{ github.run_number }}
        files: |
          client/android/app/build/outputs/apk/debug/*.apk
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
