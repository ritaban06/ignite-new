name: Build & Release APKs using Capacitor

on:
  workflow_dispatch:  # Manually triggered

jobs:
  build:
    name: Build Debug & Release APKs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      working-directory: client

    - name: Validate Environment Variables
      run: |
        echo "üîç Checking environment variables..."
        if [ -z "${{ secrets.VITE_API_URL }}" ]; then
          echo "‚ùå VITE_API_URL is not set"
          exit 1
        fi
        if [ -z "${{ secrets.VITE_GOOGLE_CLIENT_ID }}" ]; then
          echo "‚ùå VITE_GOOGLE_CLIENT_ID is not set"
          exit 1
        fi
        echo "‚úÖ All required environment variables are set"
        echo "üìç API URL: ${{ secrets.VITE_API_URL }}"

    - name: Validate Keystore Secrets
      run: |
        echo "üîê Checking keystore secrets..."
        if [ -z "${{ secrets.KEYSTORE_BASE64 }}" ]; then
          echo "‚ö†Ô∏è KEYSTORE_BASE64 is not set - will only build debug APK"
        else
          echo "‚úÖ Keystore secrets are available"
        fi

    - name: Build React app
      run: pnpm run build
      working-directory: client
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
        VITE_GOOGLE_ANDROID_CLIENT_ID: ${{ secrets.VITE_GOOGLE_ANDROID_CLIENT_ID }}
        NODE_ENV: production
        VITE_SOCIAL_LOGIN_PROVIDER: google

    - name: Sync Capacitor Android
      run: pnpm exec cap sync android
      working-directory: client

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name : Make gradlew executable
      run: chmod +x gradlew
      working-directory: client/android

    - name: Decode keystore for release signing
      run: |
        if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > client/android/app/release.keystore
          echo "‚úÖ Keystore created for release signing"
        else
          echo "‚ö†Ô∏è No keystore secret found, will only build debug APK"
        fi

    - name: Inject google-services.json
      run: |
        echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 -d > client/android/app/google-services.json
        echo "‚úÖ google-services.json injected"

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Build Debug and Release APKs
      run: |
        echo "üî® Building APKs..."
        ./gradlew assembleDebug
        if [ -f "app/release.keystore" ]; then
           echo "üîê Building signed release APK..."
           ./gradlew assembleRelease
        else
           echo "‚ö†Ô∏è No keystore found, skipping release APK"
        fi
      working-directory: client/android
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
        VITE_SOCIAL_LOGIN_PROVIDER: google

    - name: Rename APKs to include run number
      run: |
        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/v1.0.${{ github.run_number }}-debug.apk
        fi
        if [ -f app/build/outputs/apk/release/app-release.apk ]; then
          mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/v1.0.${{ github.run_number }}-release.apk
        fi
      working-directory: client/android

    - name: List generated APK files
      run: |
        echo "üì± Generated APK files:"
        find client/android/app/build/outputs/apk -name "*.apk" -type f
        ls -la client/android/app/build/outputs/apk/debug/ || echo "Debug folder not found"
        ls -la client/android/app/build/outputs/apk/release/ || echo "Release folder not found"

    - name: Upload Both APKs to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: v1.0.${{ github.run_number }}
        files: |
          client/android/app/build/outputs/apk/**/*.apk
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}